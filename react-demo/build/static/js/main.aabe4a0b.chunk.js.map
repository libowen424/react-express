{"version":3,"sources":["api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","assets/logo.png","pages/login/login.jsx","pages/home/index.jsx","pages/user/index.jsx","config/menuConfig.js","pages/role/index.jsx","pages/articles/upload/index.jsx","pages/order/appointOrder/index.jsx","pages/order/deliverOrder/index.jsx","utils/dateUtils.js","pages/articles/articleList/index.jsx","layout/index.jsx","pages/regist/index.jsx","App.js","index.js"],"names":["ajax","url","data","type","Promise","resolve","reject","promise","axios","get","params","post","then","response","catch","error","message","expressIpBase","javaIpBase","login","regist","reqRoles","addRole","roleName","name","getRoleById","roleId","addUser","user","AppointOrderInterface","addrNo","courierName","courierTel","integration","isClassified","items","orderId","orderStatus","senderAddress","senderDateBegin","senderDateEnd","senderName","senderRemark","senderTel","senderUrgent","senderWeight","time","userId","method","UserInterface","imageUrl","nickname","openId","orderNum","sessionKey","trashWeight","DeliverOrderInterface","category","feedback","place","weight","bucketId","USER_KEY","store","set","remove","Header","Content","Footer","Login","onFinish","values","a","username","password","res","console","log","code","memoryUtils","storeUtils","props","history","replace","_id","to","className","src","logo","this","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","htmlType","style","color","textAlign","Component","echarts","TooltipComponent","GridComponent","LegendComponent","LineChart","BarChart","PictorialBarChart","CanvasRenderer","option1","title","text","grid","top","right","bottom","left","xAxis","yAxis","series","smooth","tooltip","trigger","option2","legend","toolbox","feature","saveAsImage","containLabel","boundaryGap","stack","areaStyle","normal","dottedBase","Date","lineData","barData","i","date","push","getFullYear","getMonth","getDate","join","b","Math","random","d","option3","backgroundColor","axisPointer","textStyle","axisLine","lineStyle","splitLine","show","showAllSymbol","symbol","symbolSize","barWidth","itemStyle","barBorderRadius","LinearGradient","offset","barGap","z","symbolRepeat","symbolMargin","Home","span","option","Option","User","state","users","roles","isShow","showAdd","setState","setTimeout","formRef","current","setFieldsValue","showUpdate","deleteUser","confirm","onOk","status","success","getUsers","initColumns","columns","dataIndex","render","roleNames","find","onClick","initRoleNames","reduce","pre","role","getRoles","addOrUpdateUser","getFieldsValue","updateUserInfo","cancelAddRoleModel","React","createRef","bordered","rowKey","dataSource","pagination","defaultPageSize","visible","onCancel","labelCol","wrapperCol","ref","label","autoComplete","value","map","menuList","icon","HomeTwoTone","key","isPublic","CopyTwoTone","children","SettingTwoTone","TreeNode","Role","selectedRole","isShowAdd","isShowAuth","checkedKeys","initColum","onRow","event","onrowSelect","record","result","showUpdateRole","menus","getFieldValue","resetFields","getTreeNodes","item","onTreeCheck","updateRole","authName","authTime","String","storageUtils","disabled","treeChilren","rowSelection","selectedRowKeys","onSelect","checkable","defaultExpandAll","treeData","onCheck","Dragger","multiple","action","productionBASE","onChange","info","file","Articles","InboxOutlined","Column","TextArea","ColumnGroup","AppointOrder","orders","curWeight","curIntegration","curOrder","getAllAppointOrder","showDetail","order","width","content","extra","onChangeCurWeight","onChangeCurIntegration","onFinishOrder","res1","defaultValue","rows","size","showFunish","onConfirm","confirmDelete","QuestionCircleOutlined","DeliverOrder","getAllDeliverOrder","userName","address","tags","dateBegin","dateEnd","isClassify","res2","formateDate","getHours","getMinutes","getSeconds","ArticleList","files","getAllFile","split","trim","createdTime","length","href","SubMenu","Sider","TotalLayout","currentTime","now","AuthMenus","openKey","getTime","intervalId","setInterval","exit","ExclamationCircleOutlined","getRolesById","hasAuth","indexOf","child","getMenuNodes","path","location","pathname","cItem","getTitle","forEach","clearInterval","menuNodes","padding","height","theme","mode","selectedKeys","defaultOpenKeys","minHeight","component","Uplaod","formItemLayout","xs","sm","tailFormItemLayout","Regist","goBack","prefixSelector","noStyle","initialValues","scrollToFirstError","whitespace","hasFeedback","Password","dependencies","validator","_","Error","App","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.aabe4a0b.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\n/**\r\n * 封装ajax请求，返回的是一个promise对象\r\n */\r\nexport default function ajax(url,data={},type='GET'){\r\n    return new Promise((resolve, reject) => {\r\n        let promise\r\n    switch(type)\r\n    {\r\n        case 'GET':\r\n            promise =  axios.get(url,{\r\n                params:data\r\n            })\r\n            break;\r\n        case 'POST':\r\n            promise = axios.post(url,data)\r\n            break;\r\n    }\r\n    promise.then(response => {\r\n        resolve(response)\r\n      // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n      }).catch(error => {\r\n        // reject(error)\r\n        message.error('请求出错了: ' + error.message)\r\n      })\r\n})\r\n}","import ajax from './ajax'\r\n\r\n/**\r\n * 封装接口\r\n */\r\n\r\nconst BASE = '/api1'\r\n// const expressIpBase = 'http://localhost:3000'\r\nconst expressIpBase = 'http://81.68.67.68:3000'\r\n\r\nconst javaIpBase = 'http://81.68.67.68:11112'\r\n\r\nexport const login = (data)=>{\r\n   return ajax(expressIpBase+'/users/login',data,'POST')\r\n}\r\n\r\nexport const regist = (data)=>{\r\n    return ajax(expressIpBase+ '/users/regist',data,'POST')\r\n}\r\nexport const reqRoles = ()=>{\r\n    return ajax(expressIpBase+'/role/getAll',null,'POST')\r\n}\r\n\r\nexport const addRole = (roleName)=>{\r\n    return ajax(expressIpBase+'/role/add',{name:roleName},'POST')\r\n}\r\n\r\nexport const updateRole = (role)=>{\r\n    return ajax(expressIpBase+'/role/update',role,'POST')\r\n}\r\n\r\nexport const getRoleById = (roleId)=>{\r\n    return ajax(expressIpBase+'/role/getById',{\"_id\":roleId},'POST')\r\n}\r\nexport const getAllUsers = ()=>{\r\n    return ajax(expressIpBase+'/users/getAll',null,'POST')\r\n}\r\n\r\nexport const deleteUser = (_id)=>{\r\n    return ajax(expressIpBase+'/users/delete',{_id:_id},'POST')\r\n}\r\n\r\nexport const addUser = (user)=>{\r\n    return ajax(expressIpBase+'/users/regist',user,'POST')\r\n}\r\n\r\nexport const updateUser = (user)=>{\r\n    return ajax(expressIpBase+'/users/update',user,'POST')\r\n}\r\n\r\nexport const getAllFiles= ()=>{\r\n    return ajax(expressIpBase+'/file/getAll',null,'GET')\r\n}\r\n\r\nexport const AppointOrderInterface = (addrNo,courierName,courierTel,integration,isClassified,items,orderId,orderStatus,senderAddress,senderDateBegin,senderDateEnd,\r\n    senderName,senderRemark,senderTel,senderUrgent,senderWeight,time,userId,type)=>{\r\n    let url,method\r\n    switch(type)\r\n    {\r\n        case 'getAll':\r\n            url='/api/sys/core/appointorder/filter/list'\r\n            method='POST'\r\n            break;\r\n        case 'update':\r\n            url='/api/sys/core/appointorder/saveorupdate'\r\n            method='POST'\r\n            break;\r\n    }\r\n    return ajax(javaIpBase+url,{addrNo,courierName,courierTel,integration,isClassified,items,orderId,orderStatus,senderAddress,senderDateBegin,senderDateEnd,\r\n        senderName,senderRemark,senderTel,senderUrgent,senderWeight,time,userId},method)\r\n}\r\n\r\nexport const UserInterface = (imageUrl,integration,nickname,openId,orderNum,sessionKey,trashWeight,userId,type)=>{\r\n\r\n    let url,method\r\n    switch(type)\r\n    {\r\n        case 'add':\r\n            url=\"/api/sys/core/user/add\"\r\n            method='POST'\r\n            break;\r\n        case 'update':\r\n            url=\"/api/sys/core/user/saveorupdate\"\r\n            method='POST'\r\n            break;\r\n        case 'get':\r\n            url=`/api/sys/core/user/sample?id=${userId}`\r\n            method='GET'\r\n            break\r\n    }\r\n    return ajax(\r\n        javaIpBase+url,\r\n      {\r\n        imageUrl,\r\n        integration,\r\n        nickname,\r\n        openId\r\n        ,orderNum,sessionKey,\r\n        trashWeight,\r\n        userId      \r\n      },\r\n      method\r\n    )\r\n}\r\n\r\nexport const DeliverOrderInterface = (addrNo,category,feedback,integration,orderId,orderStatus,place,time,userId,weight,type,bucketId)=>{\r\n    let url,method\r\n    switch(type)\r\n    {\r\n        case 'add':         \r\n            url=\"/api/sys/core/deliverorder/add\"\r\n            method='POST'\r\n            break;\r\n        case 'getAll':\r\n            url='/api/sys/core/deliverorder/filter/list'\r\n            method='POST'\r\n            break;\r\n        case 'update':\r\n            url='/api/sys/core/deliverorder/saveorupdate'\r\n            method='POST'\r\n            break;\r\n        case 'getByOrderId':\r\n            url=`/api/sys/core/deliverorder/sample?id=${orderId}`\r\n            method='GET'\r\n            break\r\n    }\r\n    return ajax(javaIpBase+url,{addrNo,category,feedback,integration,orderId,orderStatus,place,time,userId,weight,bucketId},method)\r\n}","/**\r\n * 用来在内存中保存一些数据的工具模块\r\n * 问题是每次刷新都会刷新内存，这就需要维持登录\r\n */\r\n\r\nexport default {\r\n    user:{} //保存当前登录的的user\r\n}","/**\r\n * 将数据存入localStorage中永久保存\r\n * 利用store库\r\n */\r\nimport store from 'store'\r\n\r\nconst USER_KEY = 'user_key'\r\nexport default\r\n{\r\n    /**\r\n     * 保存user\r\n     */\r\n    saveUser(user)\r\n    {\r\n    //    localStorage.setItem(USER_KEY,JSON.stringify(user)) \r\n        store.set(USER_KEY,user)\r\n    },\r\n    /**\r\n     * 读取user\r\n     */\r\n    getUser(){\r\n        // return JSON.parse(localStorage.getItem(USER_KEY)||'{}')\r\n        return store.get(USER_KEY)||{}\r\n    },\r\n    /**\r\n     * 删除user\r\n     */\r\n    removeUser()\r\n    {\r\n        // localStorage.removeItem(USER_KEY)\r\n        store.remove(USER_KEY)\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.99101cbd.png\";","import React, { Component } from 'react';\r\nimport { Layout } from 'antd';\r\nimport './login.less';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {login} from'../../api/index'\r\nimport { message } from 'antd';\r\nimport memoryUtils from '../../utils/memoryUtils.js';\r\nimport storeUtils from '../../utils/storageUtils'\r\nimport logo from '../../assets/logo.png';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\n/**\r\n * 登录的路由组件\r\n */\r\nclass Login extends Component {\r\n    \r\n    onFinish = async (values) => {\r\n        // console.log('Received values of form: ', values);\r\n        const data = {\r\n            'username':values.username,\r\n            'password':values.password\r\n        }\r\n        let res = await login(data)\r\n        console.log(res.data)\r\n        if(res.data.code===200)\r\n        {\r\n            const user = res.data.data\r\n            //将user保存到内存\r\n            memoryUtils.user= user\r\n            //将user保存到local中\r\n            storeUtils.saveUser(user)\r\n            this.props.history.replace(\r\n                '/'\r\n            )\r\n        }\r\n        else\r\n        {\r\n            message.error('登录失败');\r\n        }\r\n      };\r\n\r\n    render() {\r\n\r\n        /**\r\n         * 判断是否登录\r\n         * 如果用户已经登陆，跳转到home\r\n         */\r\n        const user = memoryUtils.user\r\n        if(user&&user._id)\r\n        {\r\n            return (\r\n                <Redirect to='/home'></Redirect>\r\n            )\r\n        }\r\n\r\n        return (\r\n        <div className=\"login\">\r\n        <Layout className=\"layout\">\r\n            <Header className=\"header\">\r\n            <img src={logo} className=\"logo\" />\r\n            <text className=\"logoText\"> 欢迎来到回收君</text> \r\n\r\n            </Header>\r\n            <Content className=\"content\">\r\n                <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    // initialValues={{\r\n                    //     remember: true,\r\n                    // }}\r\n                    onFinish={this.onFinish}\r\n                    >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Username!',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your Password!',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n                    {/* <Form.Item>\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                        <Checkbox>Remember me</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <span className=\"login-form-forgot\" href=\"\">\r\n                        Forgot password\r\n                        </span>\r\n                    </Form.Item> */}\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                        </Button>\r\n                        Or \r\n                        <Link to='/regist' style={{color:'blue'}}>\r\n                        register now!\r\n                        </Link>\r\n                    </Form.Item>\r\n                    </Form>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Blog System By lbw424</Footer>\r\n        </Layout>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport EChartsReact from 'echarts-for-react';\r\nimport * as echarts from 'echarts/core';\r\n\r\nimport {\r\n  TooltipComponent,\r\n  GridComponent,\r\n  LegendComponent\r\n} from 'echarts/components';\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  PictorialBarChart\r\n} from 'echarts/charts';\r\nimport {\r\n  CanvasRenderer\r\n} from 'echarts/renderers';\r\n\r\necharts.use(\r\n  [TooltipComponent, GridComponent, LegendComponent, LineChart, BarChart, PictorialBarChart, CanvasRenderer]\r\n);\r\n\r\nconst option1 = {\r\n    title: {\r\n      text: '近七天访问量'\r\n    },\r\n    grid: { top: 8, right: 8, bottom: 24, left: 36 },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n    },\r\n    series: [\r\n      {\r\n        data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n        type: 'line',\r\n        smooth: true,\r\n      },\r\n    ],\r\n    tooltip: {\r\n      trigger: 'axis',\r\n    }\r\n}\r\n\r\nconst option2 = {\r\n  title: {\r\n    text: '各类订单数'\r\n  },\r\n  tooltip : {\r\n    trigger: 'axis'\r\n  },\r\n  legend: {\r\n    data:['邮件营销','联盟广告','视频广告']\r\n  },\r\n  toolbox: {\r\n    feature: {\r\n      saveAsImage: {}\r\n    }\r\n  },\r\n  grid: {\r\n    left: '3%',\r\n    right: '4%',\r\n    bottom: '3%',\r\n    containLabel: true\r\n  },\r\n  xAxis : [\r\n    {\r\n      type : 'category',\r\n      boundaryGap : false,\r\n      data : ['周一','周二','周三','周四','周五','周六','周日']\r\n    }\r\n  ],\r\n  yAxis : [\r\n    {\r\n      type : 'value'\r\n    }\r\n  ],\r\n  series : [\r\n    {\r\n      name:'投递订单',\r\n      type:'line',\r\n      stack: '总量',\r\n      areaStyle: {normal: {}},\r\n      data:[120, 132, 101, 134, 90, 230, 210]\r\n    },\r\n    {\r\n      name:'上门订单',\r\n      type:'line',\r\n      stack: '总量',\r\n      areaStyle: {normal: {}},\r\n      data:[220, 182, 191, 234, 290, 330, 310]\r\n    }\r\n  ]\r\n};\r\n\r\nvar category = [];\r\nvar dottedBase = +new Date();\r\nvar lineData = [];\r\nvar barData = [];\r\n\r\nfor (var i = 0; i < 20; i++) {\r\n  var date = new Date(dottedBase += 3600 * 24 * 1000);\r\n  category.push([\r\n      date.getFullYear(),\r\n      date.getMonth() + 1,\r\n      date.getDate()\r\n  ].join('-'));\r\n  var b = Math.random() * 200;\r\n  var d = Math.random() * 200;\r\n  barData.push(b)\r\n  lineData.push(d + b);\r\n}\r\n\r\n\r\nconst option3 = {\r\n  backgroundColor: '#0f375f',\r\n  tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n          type: 'shadow'\r\n      }\r\n  },\r\n  legend: {\r\n      data: ['line', 'bar'],\r\n      textStyle: {\r\n          color: '#ccc'\r\n      }\r\n  },\r\n  xAxis: {\r\n      data: category,\r\n      axisLine: {\r\n          lineStyle: {\r\n              color: '#ccc'\r\n          }\r\n      }\r\n  },\r\n  yAxis: {\r\n      splitLine: {show: false},\r\n      axisLine: {\r\n          lineStyle: {\r\n              color: '#ccc'\r\n          }\r\n      }\r\n  },\r\n  series: [{\r\n      name: 'line',\r\n      type: 'line',\r\n      smooth: true,\r\n      showAllSymbol: true,\r\n      symbol: 'emptyCircle',\r\n      symbolSize: 15,\r\n      data: lineData\r\n  }, {\r\n      name: 'bar',\r\n      type: 'bar',\r\n      barWidth: 10,\r\n      itemStyle: {\r\n          barBorderRadius: 5,\r\n          color: new echarts.graphic.LinearGradient(\r\n              0, 0, 0, 1,\r\n              [\r\n                  {offset: 0, color: '#14c8d4'},\r\n                  {offset: 1, color: '#43eec6'}\r\n              ]\r\n          )\r\n      },\r\n      data: barData\r\n  }, {\r\n      name: 'line',\r\n      type: 'bar',\r\n      barGap: '-100%',\r\n      barWidth: 10,\r\n      itemStyle: {\r\n          color: new echarts.graphic.LinearGradient(\r\n              0, 0, 0, 1,\r\n              [\r\n                  {offset: 0, color: 'rgba(20,200,212,0.5)'},\r\n                  {offset: 0.2, color: 'rgba(20,200,212,0.2)'},\r\n                  {offset: 1, color: 'rgba(20,200,212,0)'}\r\n              ]\r\n          )\r\n      },\r\n      z: -12,\r\n      data: lineData\r\n  }, {\r\n      name: 'dotted',\r\n      type: 'pictorialBar',\r\n      symbol: 'rect',\r\n      itemStyle: {\r\n          color: '#0f375f'\r\n      },\r\n      symbolRepeat: true,\r\n      symbolSize: [12, 4],\r\n      symbolMargin: 1,\r\n      z: -10,\r\n      data: lineData\r\n  }]\r\n};\r\n\r\nclass Home extends Component {\r\n    render() {\r\n\r\n        return (\r\n          <>\r\n            <Row>\r\n              <Col span={12}>              \r\n                <EChartsReact option={option1} />\r\n              </Col>\r\n              <Col span={12}>              \r\n                <EChartsReact option={option2} />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{\"marginTop\":\"10px\"}}>\r\n              <EChartsReact style={{\"width\":\"100%\"}} option={option3}/>\r\n            </Row>\r\n          </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component,useState  } from 'react';\r\nimport {\r\n    Card,\r\n    Button,\r\n    Table,\r\n    Modal,\r\n    message,\r\n} from 'antd'\r\nimport { getAllUsers, reqRoles, deleteUser, addUser, updateUser } from '../../api';\r\nimport { Form, Input,  Select } from 'antd';\r\nconst { Option } = Select;\r\nconst Item = Form.Item\r\n\r\nclass User extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.getUsers()\r\n        this.getRoles()\r\n        this.initColumns()\r\n    }\r\n\r\n    state ={\r\n        users: [], // 所有用户列表\r\n        roles: [], // 所有角色列表\r\n        isShow: false, // 是否显示确认框\r\n    }\r\n\r\n\r\n    /*\r\n    显示添加界面\r\n    */\r\n    showAdd = () => {\r\n        this.user = null // 去除前面保存的user\r\n        // console.log(this.formRef.current)\r\n        this.setState({isShow: true})\r\n        setTimeout(() => {\r\n            this.formRef.current.setFieldsValue({\r\n                username:null,\r\n                password:null,\r\n                roleId:null\r\n            })\r\n        },200);\r\n    }\r\n\r\n    /*\r\n    显示修改界面\r\n    */\r\n    showUpdate = (user) => {\r\n        // console.log(user)\r\n        this.user = user // 保存user\r\n        this.setState({\r\n        isShow: true\r\n        })\r\n        // console.log(this.formRef.current)\r\n        setTimeout(() => {\r\n            this.formRef.current.setFieldsValue({\r\n                username:user.username,\r\n                password:user.password,\r\n                roleId:user.roleId\r\n            })\r\n        }, 200);\r\n\r\n    }\r\n\r\n    deleteUser=async (user)=>{\r\n\r\n        Modal.confirm({\r\n            title: `确认删除${user.username}吗?`,\r\n            onOk: async () => {\r\n                let result = await deleteUser(user._id)\r\n                if(result.status===200) {\r\n                message.success('删除用户成功!')\r\n                this.getUsers()\r\n              }\r\n            }\r\n          })\r\n\r\n    }\r\n    initColumns = () => {\r\n        this.columns = [\r\n        {\r\n            title: '用户名',\r\n            dataIndex: 'username'\r\n        },\r\n        {\r\n            title: '密码',\r\n            dataIndex: 'password'\r\n        },\r\n        {\r\n            title: '所属角色',\r\n            dataIndex: 'roleId',\r\n            render: (roleId) => {\r\n                if(this.roleNames)\r\n                {\r\n                    return this.roleNames[roleId]\r\n                }\r\n                else\r\n                {\r\n                return ''\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: '操作',\r\n            dataIndex:'_id',\r\n            render: (_id) =>\r\n            {\r\n                const user = this.state.users.find((user)=>user._id===_id)\r\n                // console.log(user)\r\n                return (\r\n                <span>\r\n                    <Button onClick={() => this.showUpdate(user)}>修改</Button>\r\n                    <Button onClick={() => this.deleteUser(user)}>删除</Button>\r\n                </span>\r\n                )\r\n            }\r\n        },\r\n        ]\r\n    }\r\n\r\n    /**\r\n     * 根据roles的数组生成所有包含角色名的对象\r\n     * {roleid,roleName}\r\n     */\r\n    initRoleNames=(roles)=>\r\n    {\r\n        let roleNames = roles.reduce((pre,role)=>{\r\n            pre[role._id]=role.name\r\n            return pre\r\n        },{})\r\n        this.roleNames = roleNames\r\n        // console.log(this.roleNames)\r\n    }\r\n    getUsers = async()=>{\r\n        let res = await getAllUsers()\r\n        // console.log(res.data.data)\r\n        if(res.data.code===200)\r\n        {\r\n            this.setState({\r\n                users:res.data.data\r\n            })\r\n        }\r\n    }\r\n    getRoles = async ()=>{\r\n        let res = await reqRoles()\r\n        // console.log(res)\r\n        if(res.data.code ===200)\r\n        {\r\n            this.setState({\r\n                roles:res.data.data\r\n            })\r\n            this.initRoleNames(res.data.data)\r\n        }\r\n    }\r\n\r\n    addOrUpdateUser = async ()=>{\r\n        console.log(this.formRef.current.getFieldsValue())\r\n        const updateUserInfo = this.formRef.current.getFieldsValue()\r\n        this.setState({isShow: false})\r\n        if(this.user)\r\n        {\r\n            this.user.username=updateUserInfo.username\r\n            this.user.password=updateUserInfo.password\r\n            this.user.roleId=updateUserInfo.roleId\r\n            // console.log('this.user',this.user)\r\n\r\n            let res = await updateUser(this.user)\r\n            // console.log(res)\r\n        }\r\n        else\r\n        {\r\n           let res = await addUser(updateUserInfo)\r\n        //    console.log(res)\r\n        }\r\n        this.getUsers()\r\n    }\r\n\r\n    cancelAddRoleModel=()=>{\r\n        this.setState({isShow: false})\r\n    }\r\n\r\n    //用户操作表单数据\r\n    formRef = React.createRef();\r\n    componentDidMount()\r\n    {\r\n\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const {users, isShow, roles} = this.state\r\n\r\n        const title = <Button type='primary' onClick={this.showAdd}>创建用户</Button>\r\n       \r\n        const user = this.user || {}\r\n\r\n        const layout = {\r\n            labelCol: {\r\n              span: 4,\r\n            },\r\n            wrapperCol: {\r\n              span: 16,\r\n            },\r\n          };\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                bordered\r\n                rowKey='_id'\r\n                dataSource={users}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize: 5}}\r\n                />\r\n        \r\n\r\n            <Modal\r\n                title={user._id ? '修改用户' : '添加用户'}\r\n                visible={isShow}\r\n                onOk={this.addOrUpdateUser}\r\n                onCancel={this.cancelAddRoleModel}\r\n            >\r\n                <Form {...layout} ref={this.formRef} name=\"user\">\r\n                    <Item name='username' label='用户名'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                },\r\n                                ]}\r\n                    >\r\n                        <Input autoComplete=\"off\"  value={user.name}/>\r\n                    </Item>\r\n\r\n                    <Item name='password' label='密码'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                },\r\n                                ]}\r\n                    >\r\n                        <Input autoComplete=\"off\"  value={user.password} />\r\n                    </Item>\r\n\r\n                    <Item name='roleId' label='角色'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                },\r\n                                ]}\r\n                    >\r\n                        <Select>\r\n                            {\r\n                            roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n                            }\r\n                        </Select>\r\n                    </Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n          </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","import { HomeTwoTone ,UserOutlined, CopyTwoTone,SettingTwoTone} from '@ant-design/icons';\r\n\r\n/**\r\n * 导航菜单配置\r\n * 根据这个配置进行动态渲染导航路由\r\n * title：导航名\r\n * icon：导航的图标\r\n * key：对应的路由\r\n */\r\n\r\nconst menuList = [\r\n    {\r\n        title:'首页',//菜单标题名称\r\n        icon:<HomeTwoTone />,//图标的名称\r\n        key:'/home',//对应的path\r\n        isPublic:true//设置为公开，都能查看\r\n    },\r\n    {\r\n        title:'订单管理',\r\n        icon:<CopyTwoTone />,\r\n        key:'/order',\r\n        children:[\r\n            {\r\n                title:'上门订单',\r\n                icon:<CopyTwoTone />,\r\n                key:'/order/appointOrder',\r\n            },\r\n            {\r\n                title:'投递订单',\r\n                icon:<CopyTwoTone />,\r\n                key:'/order/deliverOrder',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title:'用户管理',\r\n        icon:<UserOutlined />,\r\n        key:'/user',\r\n    },\r\n    {\r\n        title:'权限管理',\r\n        icon:<SettingTwoTone />,\r\n        key:'/role',\r\n    },\r\n    {\r\n        title:'文件管理',\r\n        icon:<CopyTwoTone />,\r\n        key:'/articles',\r\n        children:[\r\n            {\r\n                title:'文件列表',\r\n                icon:<CopyTwoTone />,\r\n                key:'/articles/articleList',\r\n            },\r\n            {\r\n                title:'上传文件',\r\n                icon:<CopyTwoTone />,\r\n                key:'/articles/upload',\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default menuList","import React, { Component } from 'react';\r\nimport {\r\n    Card,\r\n    Button,\r\n    Table,\r\n    Modal,\r\n    Form, Input,\r\n    Tree ,\r\n    message\r\n  } from 'antd'\r\nimport {reqRoles,addRole} from '../../api/index'\r\nimport menuList from '../../config/menuConfig'\r\nimport {updateRole} from '../../api/index'\r\nimport memoryUtils from '../../utils/memoryUtils.js'\r\nimport storageUtils from '../../utils/storageUtils'\r\n\r\nconst { TreeNode } = Tree;\r\n\r\nconst Item = Form.Item\r\n\r\nclass Role extends Component {\r\n\r\n    state = \r\n    {\r\n        //角色数组\r\n        roles:[],\r\n        //选中的角色\r\n        selectedRole:{},\r\n        //是否显示窗口\r\n        isShowAdd:false,\r\n        isShowAuth:false,\r\n        //选中的角色对应的被选中的按钮\r\n        checkedKeys:[]\r\n    }\r\n\r\n\r\n    //初始化列名\r\n    initColum = () =>{\r\n        this.columns = [\r\n            {\r\n                title:'角色名称',\r\n                dataIndex:'name'\r\n            },\r\n            // {\r\n            //     title:'创建时间',\r\n            //     dataIndex:'name'\r\n            // },            \r\n            {\r\n                title:'授权时间',\r\n                dataIndex:'authTime'\r\n            },            {\r\n                title:'授权人',\r\n                dataIndex:'authName'\r\n            },\r\n        ]\r\n    }\r\n\r\n    //选择Table某一行\r\n    onRow = (role)=>{\r\n        // console.log(role)\r\n        return{\r\n            onClick: event =>{\r\n                //点击行\r\n                // console.log('row onClick()', role)\r\n                this.setState({\r\n                    selectedRole:role\r\n                })\r\n                // console.log(this.state.selectedRole)\r\n            }\r\n        }\r\n    }\r\n\r\n    //选择按钮某一行\r\n    onrowSelect =(record)=>\r\n    {\r\n        // console.log(record)\r\n        this.setState({\r\n            selectedRole:record\r\n        })\r\n    }\r\n\r\n    //用户操作表单数据\r\n    formRef = React.createRef();\r\n        \r\n    //获取角色数据\r\n    getRoles = async ()=>{\r\n        // debugger\r\n        const result = await reqRoles()\r\n        if(result.data.code==200)\r\n        {\r\n            const roles = result.data.data\r\n            this.setState({\r\n                roles,\r\n            })\r\n        }\r\n        // console.log(result,'@')\r\n    }\r\n\r\n    //显示更新弹窗\r\n    showUpdateRole=()=>{\r\n        this.setState({isShowAuth:true})\r\n        //根据选中角色的菜单初始化树状列表\r\n        const {menus} = this.state.selectedRole\r\n        this.setState({\r\n            checkedKeys:menus\r\n        })\r\n    }\r\n\r\n    //添加角色\r\n    addRole= async ()=>\r\n    {\r\n        // console.log(this.formRef.current.getFieldValue())\r\n        const {roleName} = this.formRef.current.getFieldValue()\r\n        // console.log(roleName)\r\n        let res = await addRole(roleName)\r\n        console.log(res)\r\n        if(res.data.code===200)\r\n        {\r\n        this.getRoles()\r\n        this.cancelAddRoleModel()\r\n        }\r\n    }\r\n\r\n    //取消弹窗\r\n    cancelAddRoleModel = () => {\r\n        this.setState({isShowAdd: false})\r\n        this.formRef.current.resetFields();\r\n    }\r\n\r\n    //根据动他路由表获取TreeNodes\r\n    getTreeNodes= (menuList)=>{\r\n        return menuList.reduce((pre,item)=>{\r\n            pre.push(\r\n                {\r\n                    title:item.title,\r\n                    key:item.key,\r\n                    children:item.children? this.getTreeNodes(item.children):null\r\n                }\r\n            )\r\n            return pre\r\n        },[])\r\n    }\r\n\r\n    //树状列表被选中后进行更新\r\n    onTreeCheck= checkedKeys =>{\r\n        this.setState({\r\n            checkedKeys\r\n        })\r\n        // console.log('checkedKeys',checkedKeys)\r\n        // console.log('选中角色的菜单',this.state.selectedRole.menus)\r\n    }\r\n\r\n    //更新角色的权限\r\n    updateRole=async ()=>{\r\n        let {selectedRole,checkedKeys} = this.state\r\n        selectedRole.menus=checkedKeys\r\n        let res = await updateRole({_id:selectedRole._id,authName:memoryUtils.user.username,authTime:String(new Date()),menus:checkedKeys})\r\n        // console.log(res)\r\n        if(res.data.code===200)\r\n        {\r\n            //如果当前更新的是自己的角色\r\n            //强制退出\r\n\r\n            if(selectedRole._id === memoryUtils.user.roleId)\r\n            {\r\n                memoryUtils.user={}\r\n                storageUtils.removeUser()\r\n                this.props.history.replace('/login')\r\n                message.success('当前用户角色权限修改了，请重新登录');\r\n            }\r\n            else\r\n            {\r\n                message.success('角色权限修改成功');\r\n                this.setState({isShowAuth: false})\r\n                this.getRoles()\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor(){\r\n        super()\r\n        this.getRoles()\r\n        this.initColum()\r\n    }\r\n\r\n    render() {\r\n        const {roles,selectedRole ,isShowAdd,isShowAuth ,checkedKeys} = this.state\r\n\r\n        const title = (\r\n            <span>\r\n              <Button type='primary' onClick={()=>{this.setState({isShowAdd:true})}}>创建角色</Button> &nbsp;&nbsp;\r\n              <Button type='primary' onClick={this.showUpdateRole} disabled={!selectedRole._id}>设置角色权限</Button>\r\n            </span>\r\n          )\r\n\r\n        /**\r\n         * Addform所需样式\r\n         */\r\n        const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n        };\r\n\r\n        // updataForm Item布局的配置对象\r\n        const formItemLayout = {\r\n            labelCol: { span: 4 },  // 左侧label的宽度\r\n            wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n        }\r\n        \r\n        const treeChilren = this.getTreeNodes(menuList)\r\n        // console.log(treeChilren)\r\n        \r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                rowSelection={{type:'radio', selectedRowKeys:[selectedRole._id],onSelect:this.onrowSelect}}\r\n                bordered\r\n                rowKey='_id'\r\n                dataSource={roles}\r\n                columns={this.columns}\r\n                pagination={{defaultPageSize:5}}\r\n                onRow={this.onRow}\r\n                />\r\n\r\n                <Modal\r\n                    title=\"添加角色\"\r\n                    visible={isShowAdd}\r\n                    onOk={this.addRole}\r\n                    onCancel={\r\n                        this.cancelAddRoleModel\r\n                    }\r\n                    >\r\n                          <Form\r\n                          ref={this.formRef}\r\n                            {...layout}\r\n                            name=\"basic\"\r\n                            >\r\n                            <Form.Item\r\n                                label=\"roleName\"\r\n                                name=\"roleName\"\r\n                                rules={[{ required: true, message: 'Please input your roleName!' }]}\r\n                            >\r\n                                <Input  autoComplete=\"off\"  />\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    title=\"设置角色权限\"\r\n                    visible={isShowAuth}\r\n                    onOk={this.updateRole}\r\n                    onCancel={() => {\r\n                        this.setState({isShowAuth: false})\r\n                    }}\r\n                    >\r\n                    <div>\r\n                        <Item label='角色名称' {...formItemLayout}>\r\n                        <Input value={selectedRole.name} disabled/>\r\n                        </Item> \r\n\r\n                        <Tree\r\n                            checkable\r\n                            defaultExpandAll={true}\r\n                            checkedKeys={checkedKeys}\r\n                            treeData={[\r\n                                {\r\n                                title:\"平台权限\",key:'all',\r\n                                children:treeChilren\r\n                                }\r\n                            ]}\r\n                            onCheck={\r\n                                this.onTreeCheck\r\n                            }\r\n                        >\r\n\r\n                        </Tree>\r\n                    </div>\r\n\r\n                </Modal>\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Role;","import React, { Component } from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport './index.less'\r\n\r\n// const productionBASE = 'http://localhost:3000'\r\nconst productionBASE = 'http://124.71.194.232:3000'\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n    name: 'file',\r\n    multiple: true,\r\n    action: productionBASE+'/file/upload',\r\n    onChange(info) {\r\n      console.log(info)\r\n      const { status } = info.file;\r\n      if (status !== 'uploading') {\r\n        // console.log(info.file, info.fileList);\r\n      }\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\nclass Articles extends Component {\r\n    render() {\r\n        return (\r\n              <Dragger className=\"dragger\" {...props}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n                band files\r\n                </p>\r\n            </Dragger>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Articles;","import React, { Component } from 'react';\r\nimport { Table, Tag, Space } from 'antd';\r\nimport { Popconfirm } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { Modal, Button } from 'antd';\r\nimport { Descriptions, Badge } from 'antd';\r\nimport {AppointOrderInterface,UserInterface} from '../../../api/index'\r\nimport { Form, Input, Checkbox } from 'antd';\r\nimport { InputNumber } from 'antd';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { TextArea } = Input;\r\n\r\n\r\nclass AppointOrder extends Component {\r\n\r\n    state={\r\n        orders:[],\r\n        curWeight:0,\r\n        curIntegration:0,\r\n        curOrder:{},\r\n    }\r\n\r\n    getAllAppointOrder= async()=>{\r\n        let res = await AppointOrderInterface(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,'getAll')\r\n        console.log(res)\r\n        this.setState({\r\n            orders:res.data.data.value\r\n        })\r\n    }\r\n    showDetail=(order,record)=>\r\n    {\r\n        const {orderId,senderName,time,senderAddress,orderStatus,courierName,senderDateBegin,senderDateEnd,isClassified,items,senderWeight,integration} = order\r\n        // console.log(order,record)\r\n        Modal.info({\r\n            width:'800',\r\n            title: '订单详细信息',\r\n            content: (\r\n                <Descriptions bordered  extra={<Button type=\"primary\">Edit</Button>}  >\r\n                    <Descriptions.Item label=\"orderId\">{orderId}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"senderName\">{senderName}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"time\">{time}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"senderAddress\">{senderAddress}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"courierName\" >\r\n                    {courierName}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"senderDateBegin\">\r\n                    {senderDateBegin}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"senderDateEnd\">{senderDateEnd}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"isClassified\">{isClassified==1?'已分类':'未分类'}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"items\" >{items}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"senderWeight\">\r\n                    {senderWeight}kg\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"integration\">\r\n                    {integration}\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            ),\r\n            onOk() {},\r\n            onCancel() {\r\n                console.log('Cancel');\r\n              },\r\n          });\r\n    }\r\n    showFunish(order,record)\r\n    {\r\n        const {orderId,senderWeight,integration} = order\r\n        this.setState({\r\n            curOrder:order\r\n        })\r\n        Modal.confirm({\r\n            width:'800',\r\n            title: '确定订单信息',\r\n            content: (\r\n                <Form\r\n                name=\"basic\"\r\n              >\r\n                <Form.Item\r\n                  label=\"senderWeight\"\r\n                  name=\"senderWeight\"\r\n                >\r\n                    <InputNumber disabled={true} defaultValue={senderWeight} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"curWeight\"\r\n                  name=\"curWeight\"\r\n                  rules={[{ required: true, message: '请输入实际重量' }]}\r\n                >\r\n                  <InputNumber defaultValue={0} onChange={this.onChangeCurWeight}></InputNumber>\r\n                \r\n                </Form.Item>\r\n          \r\n\r\n                <Form.Item\r\n                  label=\"integration\"\r\n                  name=\"integration\"\r\n                >\r\n                    <InputNumber disabled={true} defaultValue={integration} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"curIntegration\"\r\n                  name=\"curIntegration\"\r\n                  rules={[{ required: true, message: '请输入可获得积分' }]}\r\n                >\r\n                  <InputNumber  defaultValue={0} onChange={this.onChangeCurIntegration}></InputNumber>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"feedback\"\r\n                  name=\"feedback\"\r\n                >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n          \r\n                {/* <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item> */}\r\n\r\n              </Form>\r\n            ),\r\n            onCancel() {\r\n              console.log('Cancel');\r\n            },\r\n            onOk:this.onFinishOrder,\r\n\r\n          });\r\n    }\r\n\r\n    onChangeCurWeight=(value)=>{\r\n        this.setState({\r\n            curWeight:value\r\n        })\r\n    }\r\n    onChangeCurIntegration=(value)=>{\r\n        this.setState({\r\n            curIntegration:value\r\n        })\r\n    }\r\n    onFinishOrder=async (values) => \r\n    {\r\n        // console.log('Success:', values);\r\n        const {curIntegration,curWeight} = this.state\r\n        // console.log('curOrderId',this.state.curOrderId)\r\n        //修改订单状态\r\n        let res = await AppointOrderInterface(null,null,null,null,null,null,this.state.curOrder.orderId,3,null,null,null,null,null,null,null,null,null,null,'update')\r\n        // console.log('修改订单状态',res.data.data.value)\r\n        //修改用户积分和重量\r\n        const {userId} = this.state.curOrder\r\n        let res1 = await UserInterface(null,null,null,userId,null,null,null,userId,'get')\r\n        // console.log('原来的用户信息',res1.data.data.value)\r\n        const {integration,trashWeight,orderNum} = res1.data.data.value\r\n        let res2 = await UserInterface(null,integration+curIntegration,null,userId,orderNum+1,null,trashWeight+curWeight,userId,'update')\r\n        // console.log('修改后用户信息',res2)\r\n        this.getAllAppointOrder()\r\n    }\r\n\r\n    confirmDelete(text)\r\n    {\r\n        console.log('delete',text)\r\n        // data.unshift()\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        super()\r\n        this.getAllAppointOrder()\r\n    }\r\n    render() {\r\n        const {orders}=this.state\r\n        return (\r\n            <>\r\n                  <Table   dataSource={orders}>\r\n                    <Column title=\"订单id\" dataIndex=\"orderId\" key=\"orderId\" />\r\n                    <Column title=\"用户名\" dataIndex=\"senderName\" key=\"senderName\" />\r\n                    <Column title=\"下单时间\" dataIndex=\"time\" key=\"time\" />\r\n                    <Column\r\n                        title=\"状态\"\r\n                        dataIndex=\"orderStatus\"\r\n                        key=\"orderStatus\"\r\n                        render={orderStatus => (\r\n                            <Tag color={orderStatus==0?'red':orderStatus==1?'orange':orderStatus==2?'blue':'green'} key={orderStatus}>\r\n                            {orderStatus==0?'待处理':orderStatus==1?'已接收':orderStatus==2?'处理中':'已完成'}\r\n                            </Tag>\r\n                        )}\r\n                        />\r\n                    <Column title=\"上门地址\" dataIndex=\"senderAddress\" key=\"senderAddress\" />\r\n                    <Column title=\"骑手名\" dataIndex=\"courierName\" key=\"courierName\" />\r\n                    <Column\r\n                        title=\"Action\"\r\n                        key=\"action\"\r\n                        render={(text, record) => (\r\n                            <Space size=\"middle\">\r\n                            <a onClick={()=>{this.showDetail(text,record)}}>详情</a>\r\n\r\n                            <a onClick={()=>{this.showFunish(text,record)}}>完成</a>\r\n\r\n                            <Popconfirm title=\"Are you sure？\"     \r\n                            onConfirm={()=>{this.confirmDelete(text)}}\r\n                            icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\r\n                                <a >Delete</a>\r\n                            </Popconfirm>\r\n                            </Space>\r\n                        )}\r\n                    />\r\n                </Table>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppointOrder;","import React, { Component } from 'react';\r\nimport { Table, Tag, Space } from 'antd';\r\nimport { Popconfirm } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { Modal, Button } from 'antd';\r\nimport { Descriptions, Badge } from 'antd';\r\nimport {DeliverOrderInterface,UserInterface} from '../../../api/index'\r\nimport { Form, Input, Checkbox } from 'antd';\r\nimport { InputNumber } from 'antd';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { TextArea } = Input;\r\n\r\nclass DeliverOrder extends Component {\r\n    state={\r\n        orders:[],\r\n        curWeight:0,\r\n        curIntegration:0,\r\n        curOrder:{},\r\n    }\r\n    constructor()\r\n    {\r\n        super()\r\n        this.getAllDeliverOrder()\r\n    }\r\n    getAllDeliverOrder= async()=>{\r\n        let res = await DeliverOrderInterface(null,null,null,null,null,null,null,null,null,null,'getAll',null)\r\n        console.log(res.data.data.value)\r\n        this.setState({\r\n            orders:res.data.data.value\r\n        })\r\n    }\r\n    showDetail=(order,record)=>\r\n    {\r\n        const {orderId,userName,time,address,tags,courierName,dateBegin,dateEnd,isClassify,items,weight,integration} = order\r\n        // console.log(order,record)\r\n        Modal.info({\r\n            width:'800',\r\n            title: '订单详细信息',\r\n            content: (\r\n                <Descriptions bordered  extra={<Button type=\"primary\">Edit</Button>}  >\r\n                    <Descriptions.Item label=\"orderId\">{orderId}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"userName\">{userName}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"time\">{time}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"address\">{address}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"courierName\" >\r\n                    {courierName}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"dateBegin\">\r\n                    {dateBegin}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"dateEnd\">{dateEnd}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"isClassify\">{isClassify}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"items\" span={3}>{items}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"weight\">\r\n                    {weight}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"integration\">\r\n                    {integration}\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            ),\r\n            onOk() {},\r\n          });\r\n    }\r\n\r\n    onChangeCurWeight=(value)=>{\r\n        this.setState({\r\n            curWeight:value\r\n        })\r\n    }\r\n\r\n    onChangeCurIntegration=(value)=>{\r\n        this.setState({\r\n            curIntegration:value\r\n        })\r\n    }\r\n\r\n    showFunish(order,record)\r\n    {\r\n        const {orderId,weight,integration} = order\r\n        this.setState({\r\n            curOrder:order\r\n        })\r\n        Modal.confirm({\r\n            width:'800',\r\n            title: '确定订单信息',\r\n            content: (\r\n                <Form\r\n                name=\"basic\"\r\n              >\r\n\r\n                <Form.Item\r\n                  label=\"curWeight\"\r\n                  name=\"curWeight\"\r\n                  rules={[{ required: true, message: '请输入实际重量' }]}\r\n                >\r\n                  <InputNumber defaultValue={0} onChange={this.onChangeCurWeight}></InputNumber>\r\n                \r\n                </Form.Item>\r\n          \r\n\r\n                <Form.Item\r\n                  label=\"curIntegration\"\r\n                  name=\"curIntegration\"\r\n                  rules={[{ required: true, message: '请输入可获得积分' }]}\r\n                >\r\n                  <InputNumber  defaultValue={0} onChange={this.onChangeCurIntegration}></InputNumber>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"feedback\"\r\n                  name=\"feedback\"\r\n                >\r\n                    <TextArea rows={4} />\r\n                </Form.Item>\r\n          \r\n                {/* <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item> */}\r\n\r\n              </Form>\r\n            ),\r\n            onCancel() {\r\n              console.log('Cancel');\r\n            },\r\n            onOk:this.onFinishOrder,\r\n\r\n          });\r\n    }\r\n\r\n    onFinishOrder=async (values) => \r\n    {\r\n        // console.log('Success:', values);\r\n        const {curIntegration,curWeight,feedback} = this.state\r\n        // console.log('curOrderId',this.state.curOrderId)\r\n        //修改订单状态\r\n        let res = await DeliverOrderInterface(null,null,feedback,null,this.state.curOrder.orderId,3,null,null,null,null,'update',null)\r\n        console.log('修改订单状态',res.data.data.value)\r\n        //修改用户积分和重量\r\n        const {userId} = this.state.curOrder\r\n        let res1 = await UserInterface(null,null,null,userId,null,null,null,userId,'get')\r\n        console.log('原来的用户信息',res1.data.data.value)\r\n        const {integration,trashWeight,orderNum} = res1.data.data.value\r\n        let res2 = await UserInterface(null,integration+curIntegration,null,userId,orderNum+1,null,trashWeight+curWeight,userId,'update')\r\n        console.log('修改后用户信息',res2.data.data.value)\r\n        this.getAllDeliverOrder()\r\n    }\r\n\r\n    confirmDelete(text)\r\n    {\r\n        console.log('delete',text)\r\n        // data.unshift()\r\n    }\r\n    render() {\r\n        const {orders}=this.state\r\n\r\n        return (\r\n            <>\r\n                  <Table  dataSource={orders}>\r\n                    <Column title=\"订单id\" dataIndex=\"orderId\" key=\"orderId\" />\r\n                    <Column title=\"用户id\" dataIndex=\"userId\" key=\"userId\" />\r\n                    <Column title=\"投递时间\" dataIndex=\"time\" key=\"time\" />\r\n                    <Column\r\n                        title=\"状态\"\r\n                        dataIndex=\"orderStatus\"\r\n                        key=\"orderStatus\"\r\n                        render={orderStatus => (\r\n                            <Tag color={orderStatus==0?'red':orderStatus==1?'orange':orderStatus==2?'blue':'green'} key={orderStatus}>\r\n                            {orderStatus==0?'待处理':orderStatus==1?'已接收':orderStatus==2?'处理中':'已完成'}\r\n                            </Tag>\r\n                        )}\r\n                        />\r\n                    <Column title=\"垃圾桶id\" dataIndex=\"bucketId\" key=\"bucketId\" />\r\n                    <Column title=\"类型\" dataIndex=\"category\" key=\"category\" />\r\n                    <Column title=\"地址\" dataIndex=\"place\" key=\"place\" />\r\n                    <Column title=\"辖区编号\" dataIndex=\"addrNo\" key=\"addrNo\" />\r\n                    <Column title=\"骑手名\" dataIndex=\"courierName\" key=\"courierName\" />\r\n                    \r\n                    <Column\r\n                        title=\"Action\"\r\n                        key=\"action\"\r\n                        render={(text, record) => (\r\n                            <Space size=\"middle\">   \r\n\r\n                            <a onClick={()=>{this.showFunish(text,record)}}>完成</a>\r\n\r\n\r\n\r\n                            <Popconfirm title=\"Are you sure？\"     \r\n                            onConfirm={()=>{this.confirmDelete(text)}}\r\n                            icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\r\n                                <a>Delete</a>\r\n                            </Popconfirm>\r\n                            </Space>\r\n                        )}\r\n                    />\r\n                </Table>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeliverOrder;","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, { Component } from 'react';\r\nimport { Table, Tag, Space } from 'antd';\r\nimport { Popconfirm } from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { Modal, Button } from 'antd';\r\nimport { Descriptions, Badge } from 'antd';\r\nimport {getAllFiles} from '../../../api/index.js'\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nvar data = [\r\n    {\r\n      key: '1',\r\n      orderId: '1392145675911540738',\r\n      userName: 'lbw',\r\n      time: '2021-05-11 15:52:46',\r\n      address: '湖北省 武汉市 珞南街道 珞喻路 129号武汉大学',\r\n      tags: ['待处理'],\r\n      courierName:'qwq',\r\n      dateBegin:'2021-05-11 02:00:00',\r\n      dateEnd:'2021-05-11 03:00:00',\r\n      isClassify:'已分类',\r\n      items:'goodsType:金属,goodsWeight:10-15kg;',\r\n      weight:'2kg',\r\n      integration:'10积分'\r\n    },\r\n    {\r\n        key: '2',\r\n        orderId: '1392148089641218050',\r\n        userName: 'qwq',\r\n        time: '2021-05-15 11:49:55',\r\n        address: '湖北省 武汉市 珞南街道 珞喻路 129号武汉大学',\r\n        tags: ['已完成'],\r\n        courierName:'lbw',\r\n        dateBegin:'2021-05-11 02:00:00',\r\n        dateEnd:'2021-05-11 03:00:00',\r\n        isClassify:'已分类',\r\n        items:'goodsType:金属,goodsWeight:10-15kg;',\r\n        weight:'2kg',\r\n        integration:'10积分'\r\n      },\r\n  ];\r\n\r\nclass ArticleList extends Component {\r\n\r\n    state={\r\n        files:[]\r\n    }\r\n    constructor(){\r\n        super()\r\n        this.getAllFile()\r\n    }\r\n    getAllFile= async ()=>{\r\n        let res = await getAllFiles()\r\n        // console.log(res.data.data[0].split(','))\r\n        let files = []\r\n        res.data.data.map((item)=>{\r\n            files.push(\r\n               {\r\n                   name: item.split(',')[1].trim().split(\"'\")[1],\r\n                   createdTime: item.split(',')[3].trim().split('=')[1],\r\n                   length:item.split(',')[4].trim().split('=')[1]\r\n               } \r\n               )\r\n        })\r\n        // console.log(files)\r\n        this.setState({\r\n            files\r\n        })\r\n    }\r\n    showDetail=(order,record)=>\r\n    {\r\n        const {orderId,userName,time,address,tags,courierName,dateBegin,dateEnd,isClassify,items,weight,integration} = order\r\n        // console.log(order,record)\r\n        Modal.info({\r\n            width:'800',\r\n            title: '订单详细信息',\r\n            content: (\r\n                <Descriptions bordered  extra={<Button type=\"primary\">Edit</Button>}  >\r\n                    <Descriptions.Item label=\"orderId\">{orderId}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"userName\">{userName}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"time\">{time}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"address\">{address}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"courierName\" >\r\n                    {courierName}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"dateBegin\">\r\n                    {dateBegin}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"dateEnd\">{dateEnd}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"isClassify\">{isClassify}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"items\" span={3}>{items}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"weight\">\r\n                    {weight}\r\n                    </Descriptions.Item>\r\n                    <Descriptions.Item label=\"integration\">\r\n                    {integration}\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            ),\r\n            onOk() {},\r\n          });\r\n    }\r\n\r\n\r\n    confirmDelete(text)\r\n    {\r\n        console.log('delete',text)\r\n        // data.unshift()\r\n    }\r\n    render() {\r\n        const {files} = this.state\r\n        return (\r\n            <>\r\n                  <Table   dataSource={files}>\r\n                    <Column title=\"name\" dataIndex=\"name\" key=\"name\" />\r\n                    <Column title=\"createdTime\" dataIndex=\"createdTime\" key=\"createdTime\" />\r\n                    <Column title=\"length\" dataIndex=\"length\" key=\"length\" />\r\n\r\n                    <Column\r\n                        title=\"Action\"\r\n                        key=\"action\"\r\n                        render={(text, record) => (\r\n                            <Space size=\"middle\">\r\n                            <a onClick={()=>{this.showDetail(text,record)}}>详情</a>\r\n                            \r\n                            <Popconfirm title=\"Are you sure？\"     onConfirm={()=>{this.confirmDelete(text)}}\r\n icon={<QuestionCircleOutlined style={{ color: 'red' }} />}>\r\n                                <a href=\"#\">Delete</a>\r\n                            </Popconfirm>\r\n                            </Space>\r\n                        )}\r\n                    />\r\n                </Table>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArticleList;","import React, { Component } from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport './index.less'\r\nimport {Route, Redirect, Switch, Link} from 'react-router-dom'\r\nimport Home from '../pages/home/index'\r\nimport User from '../pages/user/index'\r\nimport Role from '../pages/role/index'\r\nimport Uplaod from '../pages/articles/upload'\r\nimport AppointOrder from '../pages/order/appointOrder/index'\r\nimport DeliverOrder from '../pages/order/deliverOrder/index'\r\nimport memoryUtils from '../utils/memoryUtils.js'\r\nimport storageUtils from '../utils/storageUtils.js'\r\nimport { Modal, Button, Space } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport menuList from '../config/menuConfig'\r\nimport {formateDate} from '../utils/dateUtils'\r\nimport {getRoleById} from '../api/index'\r\nimport ArticleList from '../pages/articles/articleList';\r\nimport logo from '../assets/logo.png';\r\n\r\nconst { confirm } = Modal;\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n/**\r\n * 总布局，项目中其他页面内容都渲染到该组件中的content部分中\r\n */\r\nclass TotalLayout extends Component {\r\n\r\n    \r\n    state = {\r\n        currentTime: formateDate(Date.now()), // 当前时间字符串\r\n        AuthMenus:[]\r\n    }\r\n\r\n    openKey=[]\r\n\r\n    getTime = () => {\r\n        // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n        this.intervalId = setInterval(() => {\r\n          const currentTime = formateDate(Date.now())\r\n          this.setState({currentTime})\r\n        }, 1000)\r\n      }\r\n\r\n    //登出\r\n    exit=()=>\r\n    {\r\n        confirm({\r\n            title: '确定要退出吗?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Some descriptions',\r\n            onOk:()=> {\r\n                memoryUtils.user={}\r\n                storageUtils.removeUser()\r\n                this.props.history.replace('/login')\r\n            },\r\n            onCancel() {\r\n            //   console.log('Cancel');\r\n            },\r\n          });\r\n    }\r\n\r\n    getRolesById=async ()=>{\r\n        const roleId = memoryUtils.user.roleId\r\n        let res = await getRoleById(roleId)\r\n        const menus = res.data.data.menus\r\n        // console.log(res.data.data.menus)\r\n        this.setState({\r\n            AuthMenus:menus\r\n        })\r\n\r\n    }\r\n    //判断当前登录用户对item是否有权限\r\n    hasAuth=(item)=>{\r\n        const {key,isPublic} = item\r\n        const {AuthMenus} = this.state\r\n        const roleId = memoryUtils.user.roleId\r\n        // console.log(roleId)\r\n\r\n        // let menus=['/home']\r\n        if(isPublic||AuthMenus.indexOf(key)!==-1)\r\n        {\r\n            // console.log('true',key)\r\n            return true\r\n        }\r\n        //如果用户有此item的某个子权限\r\n        else if(item.children)\r\n        {\r\n            return !!item.children.find(child => AuthMenus.indexOf(child.key)!==-1)\r\n        }\r\n        else\r\n        {\r\n            // console.log('false',key)\r\n            return false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据menu 的数据数组生成标签数组\r\n     */\r\n    getMenuNodes = (menuList)=>\r\n    {\r\n        const path = this.props.location.pathname\r\n        return menuList.map(item =>{\r\n            //当前用户有item的权限，才去添加，显示相应的页面\r\n            if(this.hasAuth(item))\r\n            {\r\n                // console.log(this.hasAuth(item),item.key)\r\n                if(!item.children)\r\n                {\r\n                    return (\r\n                        <Menu.Item key={item.key}>\r\n                            <Link to={item.key}>\r\n                                {item.icon}\r\n                                {item.title}\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    )\r\n                }\r\n                /**\r\n                 * 要确定默认展开的SubMenu，需要在有children的地方找到需要展开的那一项\r\n                 */\r\n                else\r\n                {\r\n                    //查找与当前请求路径匹配的子Item\r\n                    const cItem = item.children.find(cItem =>{\r\n                        return cItem.key===path\r\n                    })\r\n                    //如果存在，说明当前item所对应的子列表需要展开\r\n                    if(cItem)\r\n                        this.openKey=[item.key]\r\n                    return (\r\n                        <SubMenu key={item.key} title={\r\n                            <span>\r\n                            {item.icon}\r\n                            {item.title}\r\n                            </span>\r\n                    }>\r\n                            {/* 对item的children递归调用 */}\r\n                            {this.getMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    /**\r\n     * 根据路径获取当前页面的title\r\n     */\r\n     getTitle = () => {\r\n        // 得到当前请求路径\r\n        const path = this.props.location.pathname\r\n        let title\r\n        menuList.forEach(item => {\r\n          if (item.key===path) { // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n            title = item.title\r\n          } else if (item.children) {\r\n            // 在所有子item中查找匹配的\r\n            const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n            // 如果有值才说明有匹配的\r\n            if(cItem) {\r\n              // 取出它的title\r\n              title = cItem.title\r\n            }\r\n          }\r\n        })\r\n        return title\r\n      }\r\n\r\n    constructor()\r\n    {\r\n        super()\r\n        this.getRolesById()\r\n    }\r\n    componentDidMount()\r\n    {\r\n        this.getTime()\r\n    }\r\n    componentWillUnmount()\r\n    {\r\n        clearInterval(this.intervalId)\r\n    }\r\n\r\n    render() {\r\n\r\n        //如果内存中没有存贮user，说明没有登录\r\n        const user = memoryUtils.user\r\n        if(!user || !user._id)\r\n        {\r\n            //自动跳转到login\r\n            //在render中可以用Redirect来跳转，在事件回调中就要用编程式导航\r\n            return <Redirect to='/login'></Redirect>\r\n        }\r\n\r\n\r\n        // debugger\r\n        //最好可以放在componentWillMount(已废弃)\r\n        const menuNodes = this.getMenuNodes(menuList)\r\n        // console.log('menuNodes',menuNodes)\r\n        const path = this.props.location.pathname\r\n        const openKey = this.openKey\r\n        // console.log('openkey',openKey)\r\n        // const title = this.getTitle()\r\n        const {currentTime} = this.state\r\n        return (\r\n\r\n            <div className=\"admin\">\r\n                 <Layout className=\"totalLayout\">\r\n                    <Header className=\"header\">\r\n                        <img src={logo} className=\"logo\" />\r\n                        <span className=\"logoText\"> 欢迎来到回收君</span> \r\n                        {user!=null\r\n                           &&\r\n                        <div className=\"welComeTitle\" >\r\n                            欢迎您,{user.username}<span onClick={this.exit} className=\"exit\">退出</span>\r\n                        </div>\r\n                        }   \r\n\r\n                    </Header>\r\n                    <div className=\"header-bottom\">\r\n                            <div className=\"header-bottom-right\">\r\n                                <span className=\"curtime\">{currentTime}</span>\r\n                            </div>\r\n                    </div>\r\n                    <Content style={{ padding: '0 50px' }}>\r\n                        <Layout style={{ padding: '0px 0', height:'100%' }}>\r\n                            <Sider width={200} style={{height:'100%'}}>\r\n                            <Menu\r\n                                theme=\"dark\"\r\n                                mode=\"inline\"\r\n                                //根据路由确认默认选中\r\n                                // defaultSelectedKeys={[path]}//问题是如果输入根路径，第一次会匹配到'/'，导致/home无法匹配到\r\n                                selectedKeys={[path]}\r\n                                defaultOpenKeys={openKey}\r\n                                // openKeys={openKey}\r\n                            >\r\n                                {\r\n                                    menuNodes\r\n                                }\r\n                            </Menu>\r\n                            </Sider>\r\n                        <Content style={{ padding: '0 24px', minHeight: 280 }}>\r\n                            <Switch>\r\n                                <Route path='/home' component={Home}></Route>\r\n                                <Route path='/user' component={User}></Route>\r\n                                <Route path='/role' component={Role}></Route>\r\n                                <Route path='/articles/upload' component={Uplaod}></Route>\r\n                                <Route path='/articles/articleList' component={ArticleList}></Route>\r\n                                <Route path='/order/appointOrder' component={AppointOrder}></Route>\r\n                                <Route path='/order/deliverOrder' component={DeliverOrder}></Route>\r\n                                <Redirect to='/home'></Redirect>\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>\r\n                    Manage System By lbw424\r\n                    </Footer>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TotalLayout;","import React, { Component } from 'react';\r\nimport { Layout } from 'antd';\r\nimport './regist.less';\r\nimport {regist} from '../../api/index'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Checkbox,\r\n    Button,\r\n  } from 'antd';\r\nimport logo from '../../assets/logo.png';\r\n\r\nconst { Option } = Select;\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 16 },\r\n    },\r\n  };\r\n\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n\r\nclass Regist extends Component {\r\n    onFinish = async (values) => {\r\n        /**\r\n         * 验证后发送请求\r\n         */\r\n        const data = {\r\n            'username':values.username,\r\n            'password':values.password\r\n        }\r\n        let res = await regist(data)\r\n        // console.log('Received values of form: ', values);\r\n        console.log(res)\r\n        if(res.data.code === '200')\r\n        {\r\n            this.props.history.goBack()\r\n        }\r\n      };\r\n\r\n    prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n        <Select style={{ width: 70 }}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n        </Select>\r\n    </Form.Item>\r\n    );\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"regist\">\r\n            <Layout className=\"layout\">\r\n                <Header className=\"header\">\r\n                <img src={logo} className=\"logo\" />\r\n            <text className=\"logoText\"> 欢迎来到回收君</text> \r\n                </Header>\r\n                <Content className=\"content\">\r\n\r\n                    <Form\r\n                        {...formItemLayout}\r\n                        name=\"register\"\r\n                        onFinish={this.onFinish}\r\n                        initialValues={{\r\n                            prefix: '86',\r\n                        }}\r\n                        scrollToFirstError\r\n                        >\r\n\r\n                        {/* <Form.Item\r\n                            name=\"email\"\r\n                            label=\"E-mail\"\r\n                            rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your E-mail!',\r\n                            },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item> */}\r\n\r\n\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            label=\"Username\"\r\n                            tooltip=\"Your login UserName\"\r\n                            rules={[{ required: true, message: 'Please input your username!', whitespace: true }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                            ]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            label=\"Confirm\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                if (!value || getFieldValue('password') === value) {\r\n                                    return Promise.resolve();\r\n                                }\r\n                                return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                },\r\n                            }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n{/* \r\n                        <Form.Item\r\n                            name=\"nickname\"\r\n                            label=\"Nickname\"\r\n                            tooltip=\"What do you want others to call you?\"\r\n                            rules={[{ required: true, message: 'Please input your nickname!', whitespace: true }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item> */}\r\n\r\n\r\n\r\n                        {/* <Form.Item\r\n                            name=\"phone\"\r\n                            label=\"Phone Number\"\r\n                            rules={[{ required: true, message: 'Please input your phone number!' }]}\r\n                        >\r\n                            <Input addonBefore={this.prefixSelector} style={{ width: '100%' }} />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n                            <Row gutter={8}>\r\n                            <Col span={12}>\r\n                                <Form.Item\r\n                                name=\"captcha\"\r\n                                noStyle\r\n                                rules={[{ required: true, message: 'Please input the captcha you got!' }]}\r\n                                >\r\n                                <Input />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Button>Get captcha</Button>\r\n                            </Col>\r\n                            </Row>\r\n                        </Form.Item> */}\r\n\r\n                        {/* <Form.Item\r\n                            name=\"agreement\"\r\n                            valuePropName=\"checked\"\r\n                            rules={[\r\n                            {\r\n                                validator: (_, value) =>\r\n                                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                            },\r\n                            ]}\r\n                            {...tailFormItemLayout}\r\n                        >\r\n                            <Checkbox>\r\n                            I have read the <a href=\"\">agreement</a>\r\n                            </Checkbox>\r\n                        </Form.Item> */}\r\n\r\n                        <Form.Item {...tailFormItemLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Blog System By lbw424</Footer>\r\n            </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Regist;","/*\r\n应用的根组件\r\n*/\r\nimport React from 'react'//即使没用，定义组件也一定要引入\r\nimport {Component} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Login from './pages/login/login.jsx'\r\nimport TotalLayout from './layout'\r\nimport Regist from './pages/regist/index'\r\n\r\nexport default class App extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <BrowserRouter>\r\n                <Switch>{/*只匹配其中一个 */}\r\n                    {/* 根路由只有三个选择：登录、注册、总布局 */}\r\n                    <Route path='/login' component={Login}></Route>\r\n                    <Route path='/regist' component={Regist}></Route>\r\n                    <Route path='/' component={TotalLayout}></Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}","/**\r\n * 入口文件\r\n */\r\nimport React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './App'\r\nimport memoryUtils from './utils/memoryUtils.js';\r\nimport storeUtils from './utils/storageUtils'\r\n\r\n/**\r\n * 读取local中的保存的user\r\n * 如果有，保存到内存中\r\n * 用于免登录，如果缓存中有，就直接读取到内存\r\n */\r\nconst user = storeUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\n\r\n//渲染App组件\r\nReactDom.render(\r\n        <App/>,\r\n    document.getElementById('root')\r\n    )"],"sourceRoot":""}